name: Run Unit Tests, Update Status, Create a Docker Image, Push Docker Image to DockerHub

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y glpk-utils libglpk-dev build-essential python3-dev
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install cvxopt  # Required for GLPK solver
        pip install cylp  # Required for GLPK_MI solver
        
    - name: Run tests
      run: |
        pytest tests/ --verbose
        
    - name: Create test status
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'success',
            description: 'All tests passed successfully!',
            context: 'pytest'
          })

    - name: Update README badge
      if: success() && github.event_name == 'pull_request' && github.event.pull_request.merged == true
      uses: actions/github-script@v6
      with:
        script: |
          // Get the current README content
          const { data: readme } = await github.rest.repos.getContent({
            owner: context.repo.owner,
            repo: context.repo.repo,
            path: 'README.md',
            ref: 'main'
          });
          
          // Decode the content
          const content = Buffer.from(readme.content, 'base64').toString();
          
          // Update the badge URL to ensure it's fresh
          const updatedContent = content.replace(
            /\[!\[Tests\]\(.*?\)\]\(.*?\)/,
            '[![Tests](https://github.com/srinivasnemani/backtesting_pm_dashboard/actions/workflows/ci_cd_driver.yaml/badge.svg?branch=main)](https://github.com/srinivasnemani/backtesting_pm_dashboard/actions/workflows/ci_cd_driver.yaml)'
          );
          
          // Update the README
          await github.rest.repos.createOrUpdateFileContents({
            owner: context.repo.owner,
            repo: context.repo.repo,
            path: 'README.md',
            message: 'Update test status badge',
            content: Buffer.from(updatedContent).toString('base64'),
            sha: readme.sha,
            branch: 'main'
          });

    - name: Trigger Docker Build
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.WORKFLOW_PAT }}
        event-type: trigger-docker-build
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'